feature_planning_and_execution:
  track_sub_task_progress_and_report_to_project_manager:
    trigger: "When a sub-task (delegated to code modes or QA mode) for the current feature `{feature_id}` is reported as completed (e.g., via `attempt_completion` from a sub-mode), or when Feature Lead needs to assess overall feature progress, or when Project Manager requests a status update for the feature, or when a significant blocker potentially related to architecture is identified during execution."
    priority: 800
    action: |
      <thinking>
      **[Sub-Task Progress Tracking & Reporting Protocol for Feature: {feature_id}]**
      My status might be `[FEATURE_LEAD ({feature_id}): TRACKING_PROGRESS]` or `[FEATURE_LEAD ({feature_id}): PREPARING_REPORT]` or `[FEATURE_LEAD ({feature_id}): HANDLING_SUBTASK_COMPLETION]`.

      My objectives depend on the trigger:
      A.  **Process Sub-Task Completion:** If triggered by a sub-mode's `attempt_completion`, parse the result, update `progress.yaml`, log in `active_log.md`.
      B.  **Assess Overall Feature Status & Identify Issues:** Regularly, or after sub-task completions, review `progress.yaml` and `active_log.md`. Check for blockers, delays, or recurring problems.
      C.  **NEW: Identify Need for Architectural Consultation:** During assessment (B), if a blocker or recurring issue appears rooted in architectural limitations or requires an architectural decision, identify it.
      D.  **NEW: Request Architectural Consultation (if needed):** Formulate a request to the Project Manager (slug: `project-manager`) via `new_task`, suggesting Architect Mode (slug: `architect`) involvement. Log request, mark tasks as blocked.
      E.  **Report to Project Manager (`project-manager` slug):** Report key milestones (e.g., ready for QA, QA passed) or critical blockers (including architectural ones). Respond to status requests.

      Let `fp = "./.roo/memory-bank/features/{feature_id}/"`.

      **Scenario A: Processing a sub-task completion from a Code Mode.**
      Assume `code-backend` completed task `{feature_id}-task-002` with result: "Implemented POST /api/auth/register. Unit tests passing. Commits: [abc123def, ghi456jkl]".

      **Step A1: Parse Sub-Task Completion Result.**
      Task ID: `{feature_id}-task-002`
      Status: Completed
      Commits: `["abc123def", "ghi456jkl"]`

      **Step A2: Update `fp + progress.yaml`.**
      Read `progress.yaml`, parse YAML in thought, find task `{feature_id}-task-002`, update `status` to "completed", populate `related_commits`. Update feature's `last_updated_timestamp`. Serialize and `write_to_file`.
      </thinking>
      <read_file>
      <path>./.roo/memory-bank/features/{feature_id}/progress.yaml</path> <!-- Replace {feature_id} -->
      </read_file>
      <thinking>
      Constructing updated YAML content for progress.yaml with task {feature_id}-task-002 marked completed and commits added.
      </thinking>
      <write_to_file>
      <path>./.roo/memory-bank/features/{feature_id}/progress.yaml</path> <!-- Replace {feature_id} -->
      <content>
      (Full updated YAML content here)
      </content>
      <line_count>XX</line_count> <!-- LLM calculates line count -->
      </write_to_file>
      <thinking>
      **Step A3: Log in `fp + active_log.md`.**
      Entry: `[YYYY-MM-DD HH:MM:SS] - Task "{feature_id}-task-002: Implement POST /api/auth/register endpoint" completed by code-backend. Commits: [abc123def, ghi456jkl].`
      </thinking>
      <insert_content>
      <path>./.roo/memory-bank/features/{feature_id}/active_log.md</path> <!-- Replace {feature_id} -->
      <line>0</line> <!-- Append to end -->
      <content>
      [YYYY-MM-DD HH:MM:SS] - Task "{feature_id}-task-002: Implement POST /api/auth/register endpoint" completed by code-backend. Commits: [abc123def, ghi456jkl].
      </content>
      </insert_content>
      <thinking>
      Sub-task completion processed. Now I should assess the overall status (Step B).

      **Step B: Assess Overall Feature Status & Identify Issues.**
      I will review the updated `progress.yaml` and recent `active_log.md` entries.
      Are there tasks blocked? Are multiple defect tasks related to the same component appearing? Is overall progress slower than expected?

      **Step C: Identify Need for Architectural Consultation (Checkpoint).**
      During the assessment in Step B, I consider if any identified blockers or recurring problems warrant architectural consultation.
      Example: Suppose multiple performance-related defect tasks keep arising for the data processing part of feature `{feature_id}` = "reporting_module", and initial fixes aren't resolving the core issue. The current data processing approach, while functional, might not scale according to `global/architecture_overview.md` principles. This suggests an architectural review is needed.

      **IF Architectural Consultation IS Needed (Example: Performance Issue):**
          **Step C1: Log the detailed query internally.**
          Log in `fp + active_log.md`: "[YYYY-MM-DD HH:MM:SS] - ARCHITECTURE_QUERY: Recurring performance issues in data processing tasks (e.g., {feature_id}-task-015, {feature_id}-defect-004) suggest the current processing algorithm/architecture may not meet scalability requirements defined in global principles. Requesting architectural review."
      </thinking>
      <insert_content>
      <path>./.roo/memory-bank/features/{feature_id}/active_log.md</path> <!-- Replace {feature_id} -->
      <line>0</line>
      <content>
      [YYYY-MM-DD HH:MM:SS] - ARCHITECTURE_QUERY: Recurring performance issues in data processing tasks (e.g., {feature_id}-task-015, {feature_id}-defect-004) suggest the current processing algorithm/architecture may not meet scalability requirements defined in global principles. Requesting architectural review.
      </content>
      </insert_content>
      <thinking>
          **Step C2: Formulate and send the request to Project Manager.**
          Construct `new_task` for `project-manager` slug, detailing the performance issue, referencing logs/tasks, and suggesting consultation with `architect`.
      </thinking>
      <new_task>
      <mode>project-manager</mode>
      <message>
      "**Architecture Consultation Request for Feature: '{feature_id}' (e.g., reporting_module)**

      During progress tracking for feature '{feature_id}', recurring performance issues have been identified related to data processing tasks (e.g., task `{feature_id}-task-015`, defect `{feature_id}-defect-004`).

      **Issue:** The current implementation struggles to meet performance/scalability goals under load, potentially conflicting with global architectural principles. Initial fixes have not resolved the underlying problem.

      **Context & Details:**
      *   Details logged in `./.roo/memory-bank/features/{feature_id}/active_log.md` (timestamp: [timestamp of log entry]).
      *   Related tasks/defects in `./.roo/memory-bank/features/{feature_id}/progress.yaml`.

      **Request:**
      Could you please facilitate an architectural consultation with the `Architect Mode` (slug: `architect`)? We need a review of the current data processing approach and recommendations for optimization or alternative architectures that align with project scalability goals.

      Further work on performance-related tasks for this feature is currently blocked pending this review. Please advise.
      "
      </message>
      </new_task>
      <thinking>
          **Step C3: Update `progress.yaml` to mark dependent task(s) as blocked.**
          Read `progress.yaml`, find relevant tasks (e.g., `{feature_id}-task-015`, `{feature_id}-defect-004`), update status to "blocked", write back.
      </thinking>
      <!-- Read/Write sequence for progress.yaml -->
      <thinking>
          **Step C4: Log request sent.**
      </thinking>
      <insert_content>
      <path>./.roo/memory-bank/features/{feature_id}/active_log.md</path> <!-- Replace {feature_id} -->
      <line>0</line>
      <content>
      [YYYY-MM-DD HH:MM:SS] - Sent architecture consultation request to Project Manager regarding data processing performance issues. Related tasks marked as blocked in progress.yaml.
      </content>
      </insert_content>
      <thinking>
          Architectural consultation requested. My status returns to `[FEATURE_LEAD ({feature_id}): ACTIVE]`, but I'm aware of the block.

      **ELSE (IF Architectural Consultation IS NOT Needed based on current assessment):**
          **Step D: Report Key Milestones or Respond to Status Request (if applicable).**
          If assessment shows a key milestone reached (e.g., all coding done -> ready for QA), or if the initial trigger was a status request from PM, prepare the report.
          Example: Report "Ready for QA" to Project Manager.
      </thinking>
      <new_task>
      <mode>project-manager</mode>
      <message>
      "Status Update for Feature '{feature_id}': All planned coding tasks are now complete. The feature's `overall_status` in `features/{feature_id}/progress.yaml` has been updated to 'ready_for_qa'. Requesting initiation of QA testing cycle. Context: `./.roo/memory-bank/features/{feature_id}/`"
      </message>
      </new_task>
      <thinking>
          Or, if responding to a status request: Read relevant files (`progress.yaml`, `active_log.md`), synthesize the summary, and use `attempt_completion` to send it back to the Project Manager. (See example in previous version of this rule file).
          My status returns to `[FEATURE_LEAD ({feature_id}): ACTIVE]`.
      </thinking>
      <attempt_completion>
      <result>
      Processed sub-task completion for task `{feature_id}-task-002`. Updated `progress.yaml` and `active_log.md`. Assessed overall feature status. (If applicable: Identified architectural concern and requested consultation via Project Manager for [issue summary].) (If applicable: Reported milestone [e.g., Ready for QA] to Project Manager.) (If applicable: Provided status summary as requested.) Feature `{feature_id}` progress is being actively tracked.
      </result>
      </attempt_completion>
      <thinking>
      End of conditional logic based on assessment and consultation need. The final `attempt_completion` summarizes the actions taken within this rule execution cycle.
      </thinking>