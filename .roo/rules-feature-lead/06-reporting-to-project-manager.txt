reporting_to_project_manager_feature_lead:
  report_feature_milestone_or_significant_update:
    trigger: "When a major milestone for feature {context.feature_id} is reached (e.g., 'planning_complete', 'development_complete_ready_for_qa', 'qa_passed_ready_for_final_review', a critical blocker identified/resolved that PM needs to know), or when Project-Manager explicitly requests a status report for the feature."
    priority: 750
    action: |
      <thinking>
      **[Report Feature Milestone/Update to Project Manager - Feature Lead]**
      My status is `[FEATURE_LEAD: PREPARING_PM_REPORT]`. Feature ID: `{context.feature_id}`.
      A significant update or milestone for feature '{context.feature_name}' needs to be reported to Project-Manager.
      This is typically done by using `attempt_completion` on the overarching task that Project-Manager assigned to me for managing this feature {context.feature_id}.
      The `result` parameter of `attempt_completion` must be comprehensive and structured.

      Process:
      1.  Gather relevant information from my feature-specific Memory Bank:
          *   Current overall status of the feature from `features/{context.feature_id}/progress.yaml` (e.g., 'planning_complete', 'in_qa', 'bug_fixing', 'blocked').
          *   Summary of recent significant activities or the milestone achieved, possibly from `features/{context.feature_id}/active_log.md`.
          *   Any critical open issues or recently made key decisions that PM should be aware of (from `active_log.md` or `decisions.md`).
          *   Link to the detailed feature progress: `./.roo/memory-bank/features/{context.feature_id}/progress.yaml`.
      2.  Construct a clear and concise report string for the `result` parameter of `attempt_completion`.
      3.  Use `attempt_completion`.
      4.  If any file reading fails while gathering information, I must report this failure to Project-Manager instead of the planned milestone.
      </thinking>

      <!-- Example: Detailed planning for feature {context.feature_id} is complete. -->
      <thinking>
      Milestone: Detailed planning for feature '{context.feature_name}' (ID: {context.feature_id}) is complete.
      The `status` in `features/{context.feature_id}/progress.yaml` should be 'planning_complete'.
      I need to report this milestone to Project-Manager.
      </thinking>
      <read_file><path>./.roo/memory-bank/features/{context.feature_id}/progress.yaml</path></read_file>
      <!-- Wait for content. If fails, report error to PM. -->
      <read_file><path>./.roo/memory-bank/features/{context.feature_id}/active_log.md</path></read_file>
      <!-- Wait for content. If fails, report error to PM. -->
      <thinking>
      I have the necessary info. `progress.yaml` confirms status 'planning_complete' and summary 'Detailed tasks defined.'
      `active_log.md` confirms planning activities.
      </thinking>
      <attempt_completion>
        <result>
        # Feature Milestone Report
        **Feature Name:** {context.feature_name}
        **Feature ID:** {context.feature_id}
        **Reported By:** Feature-Lead for {context.feature_id}
        **Date:** YYYY-MM-DD HH:MM:SS <!-- Current timestamp -->

        **Milestone Achieved:** Detailed Planning Complete

        **Summary:**
        Detailed planning for the feature '{context.feature_name}' is now complete.
        - Requirements and acceptance criteria have been refined and documented in `./.roo/memory-bank/features/{context.feature_id}/context.md`.
        - All necessary sub-tasks (design, development, QA) have been identified, defined with assignees and dependencies, and logged in `./.roo/memory-bank/features/{context.feature_id}/progress.yaml`.
        - The feature status in `progress.yaml` is now 'planning_complete'.

        **Next Steps (for Feature-Lead):**
        I am ready to begin delegation of the first set of sub-tasks (e.g., design tasks, initial development tasks) to the respective Coder modes.

        **Blockers:**
        None at this moment.

        **Link to Feature Progress:** `./.roo/memory-bank/features/{context.feature_id}/progress.yaml`
        </result>
      </attempt_completion>
      <!-- After this, Feature-Lead's specific task related to "planning" might be considered complete by PM.
           Feature-Lead will then proceed with sub-task delegation based on its internal logic.
           The status of Feature-Lead after attempt_completion might go to `[FEATURE_LEAD: ACTIVE]` or a more specific one
           like `[FEATURE_LEAD: READY_FOR_SUB_TASK_DELEGATION]` if the PM's response implies continuation.
      -->
      My status becomes `[FEATURE_LEAD: ACTIVE]`. Feature ID: `{context.feature_id}`.

  report_critical_blocker_or_escalation:
    trigger: "When a critical blocker for feature {context.feature_id} is identified that Feature-Lead cannot resolve independently and requires Project-Manager's intervention, awareness, or decision (e.g., cross-team dependency issue, major unexpected technical challenge, resource conflict, significant deviation from plan required)."
    priority: 900 # Critical issues need prompt reporting
    action: |
      <thinking>
      **[Report Critical Blocker/Escalation to Project Manager - Feature Lead]**
      My status is `[FEATURE_LEAD: ESCALATING_ISSUE_TO_PM]`. Feature ID: `{context.feature_id}`.
      A critical blocker has arisen for feature '{context.feature_name}' that requires PM's attention.
      The blocker details MUST be logged in `features/{context.feature_id}/active_log.md` and the relevant task in `features/{context.feature_id}/progress.yaml` should be marked 'blocked'.

      Process:
      1.  Ensure the blocker is well-documented in `active_log.md` and `progress.yaml`.
      2.  Clearly articulate the blocker: what it is, its impact on the feature and potentially the project.
      3.  Explain steps already taken or considered by me.
      4.  Specify what kind of help, decision, or intervention is needed from Project-Manager.
      5.  Use `attempt_completion` with a result clearly indicating an ESCALATION or BLOCKER.
      </thinking>

      <!-- Example: A required external service for feature {context.feature_id} is indefinitely unavailable. -->
      <thinking>
      Blocker: The primary external weather API for feature '{context.feature_name}' is down with no ETA for restoration. All backend tasks depending on it are blocked.
      This has been logged in `active_log.md` and relevant tasks in `progress.yaml` are marked 'blocked'.
      </thinking>
      <attempt_completion>
        <result>
        # CRITICAL BLOCKER / ESCALATION
        **Feature Name:** {context.feature_name}
        **Feature ID:** {context.feature_id}
        **Reported By:** Feature-Lead for {context.feature_id}
        **Date:** YYYY-MM-DD HH:MM:SS <!-- Current timestamp -->

        **Blocker Description:**
        The primary external weather API service required for data ingestion in feature '{context.feature_name}' is indefinitely unavailable. This was confirmed on [Date of confirmation].

        **Impact:**
        - All backend development sub-tasks related to data ingestion and processing are halted.
        - Feature delivery will be significantly delayed if this is not resolved promptly.
        - Current affected tasks in `progress.yaml`: [{task_id_1}, {task_id_2}]. Their status has been updated to 'blocked'.

        **Current Status & Analysis:**
        - Blocker details logged in `./.roo/memory-bank/features/{context.feature_id}/active_log.md`.
        - Alternative free APIs investigated have significantly lower data quality or prohibitive rate limits for our use case.

        **Action Required from Project Manager:**
        1.  Decision on whether to continue waiting for the primary API and for how long.
        2.  Approval to investigate and potentially procure a paid alternative API (requires budget consideration).
        3.  Discussion on de-scoping the dependency on this external API or fundamentally changing the feature's approach if alternatives are not viable.

        Please advise on how to proceed. I am available to provide further details or research specific alternatives upon direction.
        </result>
      </attempt_completion>
      <!-- Feature-Lead now awaits instructions from Project-Manager. Status might become AWAITING_PM_DECISION. -->
      My status becomes `[FEATURE_LEAD: AWAITING_PM_DECISION_ON_BLOCKER]`. Feature ID: `{context.feature_id}`.

  report_feature_completion_on_branch:
    trigger: "When feature {context.feature_id} has been fully developed on its current branch, all sub-tasks completed, all code reviews passed, QA testing passed, and is considered stable and complete by Feature-Lead. The status in `features/{context.feature_id}/progress.yaml` should reflect 'completed_on_current_branch'."
    priority: 880 # High priority for final reporting
    action: |
      <thinking>
      **[Report Feature Completion on Branch to Project Manager - Feature Lead]**
      My status is `[FEATURE_LEAD: REPORTING_FEATURE_COMPLETION]`. Feature ID: `{context.feature_id}`.
      Feature '{context.feature_name}' (ID: {context.feature_id}) is now fully complete and stable on its current development branch.
      This follows successful QA approval (rule `06-...txt`).
      The `status` in `features/{context.feature_id}/progress.yaml` is 'completed_on_current_branch'.
      `features/{context.feature_id}/active_log.md` should have entries for QA pass.

      Process:
      1.  Gather final details from `progress.yaml` and `active_log.md`.
      2.  Construct a final summary report for Project-Manager using `attempt_completion`.
          The report should include:
          - Confirmation of completion on the current branch.
          - Link to final state in Memory Bank (e.g., `features/{context.feature_id}/`).
          - Summary of key achievements or any notable points from the development lifecycle.
          - Confirmation that all feature-specific documentation within FL scope (e.g., `design_notes.md`) is up-to-date.
      3.  If any file reading fails, report this failure to PM.
      </thinking>

      <thinking>
      All conditions for completing feature '{context.feature_name}' on its current branch are met.
      I will gather final details from `progress.yaml` and `active_log.md`.
      </thinking>
      <read_file><path>./.roo/memory-bank/features/{context.feature_id}/progress.yaml</path></read_file>
      <!-- Wait for content. If fails, report error. -->
      <read_file><path>./.roo/memory-bank/features/{context.feature_id}/active_log.md</path></read_file>
      <!-- Wait for content. If fails, report error. -->
      <attempt_completion>
        <result>
        # FEATURE COMPLETE on Current Branch
        **Feature Name:** {context.feature_name}
        **Feature ID:** {context.feature_id}
        **Reported By:** Feature-Lead for {context.feature_id}
        **Date:** YYYY-MM-DD HH:MM:SS <!-- Current timestamp -->

        **Summary:**
        The feature '{context.feature_name}' has been successfully developed, tested, QA approved, and is now stable and complete on its current development branch.
        - All planned sub-tasks as per `./.roo/memory-bank/features/{context.feature_id}/progress.yaml` are marked 'completed' or 'review_passed'.
        - The overall feature status in `progress.yaml` is 'completed_on_current_branch'.
        - Key activities including design, implementation, code reviews, and QA cycles have been logged in `./.roo/memory-bank/features/{context.feature_id}/active_log.md`.
        - The feature meets its defined scope as per `./.roo/memory-bank/features/{context.feature_id}/context.md`.
        - All relevant feature-specific Memory Bank files under `features/{context.feature_id}/` (including `design_notes.md`) are up-to-date.

        **Key Outcomes/Notes (Optional):**
        *   [Mention any significant positive outcomes, e.g., "Performance targets met for API X."]
        *   [Mention any minor, deferred, or known issues if agreed with PM, e.g., "Minor UI tweak Y deferred to post-release backlog as per decision D-XYZ."]

        This feature is now ready for Project-Manager's review and any subsequent project-level integration or release planning.
        The code resides on the branch: [Feature Lead should specify the name of the current development branch if known, or state "the developer's final working branch for this feature"].
        </result>
      </attempt_completion>
      <!-- Feature-Lead's overarching task from Project-Manager for this feature is now complete. -->
      <!-- Feature-Lead will become idle or await new assignments from Project-Manager. -->
      My status becomes `[FEATURE_LEAD: IDLE_AWAITING_NEW_ASSIGNMENT]`. Feature ID: `{context.feature_id}`.