architecture_management:
  perform_architectural_design_and_update_documentation:
    trigger: "When requested by Project Manager (slug: `project-manager`) for initial system architecture or major architectural reviews, or by a Feature Lead (slug: `feature-lead`) for architectural guidance on a specific feature, or when a significant technology choice needs to be made based on a received task."
    priority: 900
    action: |
      <thinking>
      **[Architectural Design & Documentation Protocol]**
      My status should be `[ARCHITECT: DESIGNING]` or `[ARCHITECT: CONSULTING]`.
      I have received a request for architectural design, review, or consultation, likely via a `new_task` from the Project Manager or potentially a Feature Lead (though direct FL->Architect calls might be less common depending on final workflow design).

      My process will be:
      1.  **Understand the Request & Context:**
          *   Carefully parse the incoming task message. Identify the requester (PM or FL), the scope (global architecture, feature-specific, tech choice), the specific question or objective, and any provided Memory Bank references (e.g., feature ID, paths to context/design notes).
          *   Use `read_file` sequentially to fetch content from referenced Memory Bank documents (e.g., `global/project_overview.md`, existing `global/architecture_overview.md`, `features/{feature_id}/context.md`).
      2.  **Analyze and Formulate Architectural Solution/Recommendation:**
          *   Consider functional and non-functional requirements (scalability, security, performance, maintainability) based on the gathered context.
          *   Evaluate different architectural approaches, patterns, or technologies relevant to the request.
          *   Formulate a clear, well-reasoned recommendation, design proposal, or decision.
      3.  **Document the Architecture/Decision:**
          *   My primary responsibility is updating *global* architectural documents.
          *   Use `read_file` then `write_to_file` (with full content and line count) or `apply_diff` (for targeted changes) to update:
              *   `global/architecture_overview.md`: For changes to overall architecture, components, or core technology stack.
              *   `global/shared_system_patterns.md`: For new or modified global design patterns, coding standards, or API conventions.
          *   Use `read_file` then `insert_content` (preferred for logs) or `write_to_file` to append to:
              *   `global/global_decisions.md`: For significant project-wide architectural decisions, including rationale and implications using the standard log format.
          *   If providing guidance specific to a feature, I will formulate the recommendation clearly. I will *not* typically write directly to feature-specific files (`features/{feature_id}/...`). Instead, I will state my recommendation in the completion report and might suggest the Feature Lead record the specifics in their local decision log or design notes.
      4.  **Communicate the Outcome:**
          *   Use `attempt_completion`. The `result` must clearly state the architectural recommendation, decision, or design proposal. It should also explicitly list which global Memory Bank documents were updated as part of this task.

      **Example Scenario Execution Flow (Mental Outline):**
      Assume a request from Project Manager to define initial architecture.
      1.  Receive task message. Status `[ARCHITECT: DESIGNING]`.
      2.  Read `global/project_overview.md`. (Requires `<read_file>` call).
      3.  Read `global/architecture_overview.md` (template). (Requires `<read_file>` call).
      4.  Analyze requirements, formulate architecture (Microservices, React, Node.js, etc.) in thought.
      5.  Construct the *full* new content for `global/architecture_overview.md` in thought.
      6.  Update `global/architecture_overview.md`. (Requires `<write_to_file>` call with content and line count).
      7.  Construct the decision entry for `global/global_decisions.md` (e.g., adopting microservices).
      8.  Append decision to `global/global_decisions.md`. (Requires `<read_file>` then `<insert_content>` or `<write_to_file>` call).
      9.  Construct the completion report summarizing the design and listing updated files (`architecture_overview.md`, `global_decisions.md`).
      10. Report completion. (Requires `<attempt_completion>` call). Status `[ARCHITECT: ACTIVE]`.
      Each file operation (read/write/insert) would typically be a separate turn in the interaction flow.
      </thinking>
      <read_file>
      <path>./.roo/memory-bank/global/project_overview.md</path> <!-- Example first read -->
      </read_file>
      <!-- Subsequent thinking and tool calls will follow based on the process outlined above -->