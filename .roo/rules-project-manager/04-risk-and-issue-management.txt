project_controls:
  risk_issue_tracking_and_management:
    trigger: "When a user reports a new risk/issue, a Feature Lead escalates one, the Project Manager identifies a potential risk/issue from progress reports or discussions, or when an update to an existing risk/issue is provided/required."
    action: |
      <thinking>
      **[Risk and Issue Management Protocol]**
      My status might be `[PROJECT_MANAGER: MANAGING_RISKS_ISSUES]`.
      This rule handles the lifecycle of project-level risks and issues: logging new ones, and updating existing ones.
      The primary location for logging these is the "High-Level Risks & Issues Log" section within `global/project_overview.md`.
      Alternatively, if a `global/risks_issues.yaml` file was decided upon for more structure, that would be the target. For now, I will stick to `global/project_overview.md` as per previous definitions.

      **Process for Logging a NEW Risk/Issue:**
      1.  Elicit/confirm details: Description, perceived impact (High/Medium/Low), source/reporter, date.
      2.  Generate a unique ID (e.g., RISK-00X, ISSUE-00X) by checking the last ID used in `global/project_overview.md`.
      3.  Construct the new log entry string.
      4.  Append this entry to the "High-Level Risks & Issues Log" section in `global/project_overview.md`. This will likely involve:
          a.  `<read_file>` `global/project_overview.md`.
          b.  In thought: Locate the risk/issue log section. Append the new entry string to that section's content.
          c.  `<write_to_file>` the entire modified content of `global/project_overview.md` with the new `line_count`. (Using `apply_diff` or `insert_content` might be possible but can be trickier for multi-line appends into specific sections without direct line number targeting for the section end).
      5.  Update `manifest.yaml` timestamp.
      6.  Inform the user and discuss potential mitigation/resolution or next steps.

      **Process for UPDATING an Existing Risk/Issue:**
      1.  Identify the Risk/Issue ID from user input or context.
      2.  Elicit/confirm the updates (e.g., new status, owner, mitigation notes).
      3.  Modify the existing entry in `global/project_overview.md`. This will involve:
          a.  `<read_file>` `global/project_overview.md`.
          b.  In thought: Locate the specific risk/issue entry by its ID. Modify the relevant parts of that entry string.
          c.  `<write_to_file>` the entire modified content of `global/project_overview.md` with the new `line_count`. (`apply_diff` is a strong candidate here if the change is localized to one line or a small block).
      4.  Update `manifest.yaml` timestamp.
      5.  Inform the user of the update.

      Let's consider an example: User reports "The new UI framework might have a steep learning curve for the team."
      This is a potential risk.
      </thinking>

      <!-- This initial thinking sets up the general strategy. Specific tool calls depend on whether it's a NEW or UPDATE operation, determined after user input or context. -->
      <!-- Example: If it's a NEW risk, the flow would be: -->
      <thinking>
      **[Risk and Issue Management Protocol - Logging New Risk Example]**
      The user has reported a new potential risk: "The new UI framework might have a steep learning curve for the team."
      My status: `[PROJECT_MANAGER: LOGGING_RISK]`.

      **Step 1: Elicit/Confirm Details.**
      I should ask for perceived impact if not provided.
      </thinking>
      <!--
      <ask_followup_question>
      <question>Understood. I'll log "Steep learning curve for the new UI framework" as a potential risk. What would you assess as its potential impact (e.g., High, Medium, or Low) on project timelines or quality if it materializes?</question>
      <follow_up>
      <suggest>High Impact</suggest>
      <suggest>Medium Impact</suggest>
      <suggest>Low Impact</suggest>
      </follow_up>
      </ask_followup_question>
      -->
      <thinking>
      **[Risk and Issue Management Protocol - Logging New Risk Example - Cont.]**
      Let's assume the user responds with "Medium Impact".
      Date: (I'll use current date, e.g., YYYY-MM-DD)
      Reporter: User

      **Step 2: Read `global/project_overview.md` to find the last Risk/Issue ID and the log section.**
      </thinking>
      <read_file>
      <path>./.roo/memory-bank/global/project_overview.md</path>
      </read_file>
      <thinking>
      **[Risk and Issue Management Protocol - Logging New Risk Example - Cont.]**
      I have received the content of `global/project_overview.md`.
      I will parse it in my thought process to find the "High-Level Risks & Issues Log" section.
      Suppose the last entry was `RISK-001`. The new ID will be `RISK-002`.
      The new entry string will be:
      `- [YYYY-MM-DD] RISK-002 Steep learning curve for the new UI framework - Status: Open - Owner: Project Manager (to investigate) - Impact: Medium`

      **Step 3: Append the new entry to `global/project_overview.md`.**
      I will modify the content string in memory by adding this new line under the "High-Level Risks & Issues Log" section.
      Then I will use `write_to_file` with the complete modified content.
      Let's say the original file had 50 lines, and I'm adding 1 new line. The new line_count will be 51.
      </thinking>
      <!--
      <write_to_file>
      <path>./.roo/memory-bank/global/project_overview.md</path>
      <content>
      ... (previous content of project_overview.md) ...

      ## 4. High-Level Risks & Issues Log
      *(Format: - [YYYY-MM-DD] [Risk/Issue ID] Description - Status: Open/Mitigating/Resolved - Owner: Mode/User - Impact: High/Medium/Low)*
      - [Previous Date] RISK-001 Example existing risk - Status: Open - Owner: User - Impact: High
      - [YYYY-MM-DD] RISK-002 Steep learning curve for the new UI framework - Status: Open - Owner: Project Manager (to investigate) - Impact: Medium

      ## 5. Assumptions & Dependencies
      ... (rest of the file) ...
      </content>
      <line_count>51</line_count> <!-- Placeholder, actual count needed -->
      </write_to_file>
      -->
      <thinking>
      **[Risk and Issue Management Protocol - Logging New Risk Example - Cont.]**
      After the `write_to_file` is confirmed successful.

      **Step 4: Update `manifest.yaml` timestamp.**
      Read `manifest.yaml`, parse, update `last_updated_timestamp`, serialize, `write_to_file`.
      </thinking>
      <!-- Tool call for manifest.yaml update in a subsequent turn -->

      <thinking>
      **Step 5: Inform User and Discuss.**
      </thinking>
      <!--
      <attempt_completion>
      <result>
      "I've logged 'RISK-002: Steep learning curve for the new UI framework' with Medium impact in `global/project_overview.md`.
      I'll mark myself as the owner to investigate this further, perhaps by consulting with the Architect Mode or relevant Feature Leads.
      Do you have any initial thoughts on mitigation strategies we could consider?"
      </result>
      </attempt_completion>
      -->
      <thinking>
      **[Risk and Issue Management Protocol - Updating Existing Risk/Issue Example]**
      Now, let's consider the user wants to update RISK-002: "Let's change the status of RISK-002 to 'Mitigating' as we've scheduled training."
      My status: `[PROJECT_MANAGER: UPDATING_RISK_STATUS]`.

      **Step 1: Identify Risk ID and Update Details.**
      ID: RISK-002
      New Status: Mitigating
      New Notes/Owner (if applicable): (e.g., "Training scheduled by PM")

      **Step 2: Read `global/project_overview.md`.**
      </thinking>
      <read_file>
      <path>./.roo/memory-bank/global/project_overview.md</path>
      </read_file>
      <thinking>
      **[Risk and Issue Management Protocol - Updating Existing Risk/Issue Example - Cont.]**
      I have the content of `global/project_overview.md`.
      I will find the line containing `RISK-002`.
      Original line: `- [YYYY-MM-DD] RISK-002 Steep learning curve for the new UI framework - Status: Open - Owner: Project Manager (to investigate) - Impact: Medium`
      New line:     `- [YYYY-MM-DD] RISK-002 Steep learning curve for the new UI framework - Status: Mitigating - Owner: Project Manager (Training scheduled) - Impact: Medium`

      **Step 3: Modify the entry in `global/project_overview.md`.**
      I will use `apply_diff` for this, as it's a targeted change to an existing line.
      I need the exact original line content and its line number (e.g., line 48).
      </thinking>
      <!--
      <apply_diff>
      <path>./.roo/memory-bank/global/project_overview.md</path>
      <diff>
      <![CDATA[
      <<<<<<< SEARCH
      :start_line:48
      -------
      - [YYYY-MM-DD] RISK-002 Steep learning curve for the new UI framework - Status: Open - Owner: Project Manager (to investigate) - Impact: Medium
      =======
      - [YYYY-MM-DD] RISK-002 Steep learning curve for the new UI framework - Status: Mitigating - Owner: Project Manager (Training scheduled) - Impact: Medium
      >>>>>>> REPLACE
      ]]>
      </diff>
      </apply_diff>
      -->
      <thinking>
      **[Risk and Issue Management Protocol - Updating Existing Risk/Issue Example - Cont.]**
      After `apply_diff` is confirmed successful.

      **Step 4: Update `manifest.yaml` timestamp.**
      (Same procedure as before)
      </thinking>

      <thinking>
      **Step 5: Inform User.**
      </thinking>
      <!--
      <attempt_completion>
      <result>
      "The status of 'RISK-002: Steep learning curve for the new UI framework' has been updated to 'Mitigating' in `global/project_overview.md`, noting that training has been scheduled."
      </result>
      </attempt_completion>
      -->
      