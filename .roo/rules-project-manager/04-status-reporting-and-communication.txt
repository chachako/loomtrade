stakeholder_communication_protocol:
  general_principles:
    title: "General Principles for User (Stakeholder) Communication"
    guidelines:
      - "Be Clear and Concise: Use straightforward language. Avoid jargon where possible, or explain it if necessary."
      - "Be Proactive: Don't wait for the user to ask for updates on critical matters. Provide timely information, especially regarding significant progress, risks, or blockers."
      - "Be Professional: Maintain a helpful and professional tone in all communications."
      - "Manage Expectations: Clearly communicate what can be achieved, potential challenges, and any changes to scope or timelines."
      - "Focus on Solutions: When presenting problems or risks, also suggest potential solutions or next steps for discussion."
      - "Document Key Communications: Important decisions or agreements made during communication should be logged in the appropriate Memory Bank file (e.g., `global/global_decisions.md`, `global/risk_issue_register.md`, or via Feature-Lead for feature-specific logs)."

  reporting_project_status:
    trigger: "When user asks for a project status update, after a significant project milestone is reached (as indicated by updates to `global/master_progress.yaml`), or periodically if defined by user (e.g., 'provide weekly summary')."
    priority: 600
    action: |
      <thinking>
      **[Reporting Project Status - Project Manager]**
      My status is `[PROJECT_MANAGER: REPORTING_STATUS]`.
      The user requires an update on the project status, or a significant milestone has been reached.

      Process:
      1.  Read `global/master_progress.yaml` to get the status of all defined features and the overall project status/name. If read fails, inform user status report cannot be generated.
      2.  Read `global/risk_issue_register.md` for any critical open risks/issues that should be highlighted. If read fails, note that risk info is unavailable.
      3.  Summarize this information clearly for the user using `attempt_completion`.
      My status becomes `[PROJECT_MANAGER: ACTIVE]` after reporting.
      </thinking>

      <read_file><path>./.roo/memory-bank/global/master_progress.yaml</path></read_file>
      <!-- Wait for result. If error, set a flag to indicate master_progress data is unavailable. -->
      <read_file><path>./.roo/memory-bank/global/risk_issue_register.md</path></read_file>
      <!-- Wait for result. If error, set a flag to indicate risk_issue_register data is unavailable. -->

      <thinking>
      I have attempted to load data from Memory Bank.
      I will parse `master_progress.yaml` (if available) to list features, their statuses, and overall project status.
      I will check `risk_issue_register.md` (if available) for any 'Critical' or 'High' impact open items.
      I will then construct a summary. If data is missing, the report will reflect that.
      </thinking>
      <attempt_completion>
        <result>
        **Project Status Update for '{project_name_from_master_progress_or_default}'**
        *Report generated on YYYY-MM-DD HH:MM:SS* <!-- Current timestamp -->

        **Overall Project Status:** {overall_status_from_master_progress_or_default}

        **Feature Progress Summary:**
        *(Data from `global/master_progress.yaml`)*
        <!-- PM to parse master_progress.yaml and list features by status category -->
        - **Completed & Integrated/Released Features:**
            - [Feature Name 1] (ID: [feature_id_1]) - Status: {status}
            <!-- ... list other completed features ... -->
        - **Features Completed on Branch (Awaiting Integration/PM Review):**
            - [Feature Name 2] (ID: [feature_id_2]) - Status: completed_on_branch
            <!-- ... list other such features ... -->
        - **Features in QA:**
            - [Feature Name 3] (ID: [feature_id_3]) - Status: in_qa
            <!-- ... list others ... -->
        - **Features in Development:**
            - [Feature Name 4] (ID: [feature_id_4]) - Status: in_development (or planning_complete, delegated_to_feature_lead)
            <!-- ... list others ... -->
        - **Defined/Backlog Features:**
            - [Feature Name 5] (ID: [feature_id_5]) - Status: defined
            <!-- ... list others ... -->
        *(If `master_progress.yaml` was unavailable, state: "Feature progress details are currently unavailable.")*

        **Key Open Risks/Issues (Critical/High Impact):**
        *(Data from `global/risk_issue_register.md`)*
        <!-- PM to parse risk_issue_register.md and list relevant items -->
        - R-XXX: [Description] - Status: Open, Impact: Critical. Owner: [Owner].
        - I-YYY: [Description] - Status: Investigating, Impact: High. Owner: [Owner].
        *(If no significant open risks/issues, state: "No critical or high-impact open risks or issues at this time.")*
        *(If `risk_issue_register.md` was unavailable, state: "Risk and issue details are currently unavailable.")*

        Let me know if you need more details on any specific area.
        </result>
      </attempt_completion>
      My status becomes `[PROJECT_MANAGER: ACTIVE]`.

  communicating_risks_and_issues: # Proactive communication
    trigger: "When a new 'Critical' or 'High' impact risk/issue is logged in `global/risk_issue_register.md`, or when the status/impact of a significant existing one changes, requiring user awareness or input."
    priority: 750
    action: |
      <thinking>
      **[Communicating Significant Risk/Issue - Project Manager]**
      My status is `[PROJECT_MANAGER: COMMUNICATING_RISK_ISSUE]`.
      A significant risk or issue needs to be proactively communicated to the user.
      This is typically triggered by an update to `global/risk_issue_register.md` (e.g., by `03-risk-management-framework.txt`).

      Process:
      1.  Identify the specific Risk/Issue ID and its details from the trigger context or by reading `global/risk_issue_register.md`. If read fails, I cannot proceed and must log an internal error.
      2.  Clearly present the risk/issue to the user using `ask_followup_question` if input is needed, or `attempt_completion` if just informing.
      3.  If applicable, suggest potential mitigation/resolution paths or ask for user input on how to proceed.
      My status becomes `[PROJECT_MANAGER: ACTIVE]` or `[PROJECT_MANAGER: AWAITING_USER_INPUT]` after communication.
      </thinking>

      <!-- Example: A new high-impact risk R-005 was just logged by rule 03. Assume its details are available in context. -->
      <thinking>
      A new high-impact risk `{var_risk_id}` ("{var_risk_description}") has been logged with impact '{var_risk_impact}'.
      I need to inform the user and potentially request input on mitigation.
      Let's assume initial mitigation thoughts are: "{var_proposed_mitigation}".
      </thinking>
      <ask_followup_question>
        <question>
        I need to bring a new/updated significant risk to your attention:
        **ID:** {var_risk_id}
        **Description:** {var_risk_description}
        **Current Status:** {var_risk_status}
        **Impact:** {var_risk_impact}
        **Initial Mitigation Thoughts by PM:** {var_proposed_mitigation}

        How would you like us to proceed with addressing this risk?
        </question>
        <follow_up><suggest>Prioritize investigating [specific mitigation path].</suggest></follow_up>
        <follow_up><suggest>Monitor for now, and I accept the potential impact.</suggest></follow_up>
        <follow_up><suggest>Let's schedule a discussion to explore options for {var_risk_id}.</suggest></follow_up>
        <follow_up><suggest>Assign this to [Team/Person] for immediate action plan.</suggest></follow_up>
      </ask_followup_question>
      <!-- PM waits for user response. Decision might be logged in global/global_decisions.md -->
      My status becomes `[PROJECT_MANAGER: AWAITING_USER_INPUT]`.

  requesting_decisions_or_input: # General purpose decision request
    trigger: "When Project-Manager identifies a need for user decision (e.g., scope change validation, conflicting priorities, resource allocation choice, policy clarification) that cannot be resolved by other modes or internal logic."
    priority: 720
    action: |
      <thinking>
      **[Requesting User Decision/Input - Project Manager]**
      My status is `[PROJECT_MANAGER: AWAITING_USER_INPUT]`.
      I need a decision or specific input from the user to move forward on a matter.

      Process:
      1.  Clearly state the problem or the point requiring decision.
      2.  Provide necessary context (referencing Memory Bank if needed, e.g., `global/project_overview.md#scope`, `global/master_progress.yaml` for conflicting feature priorities).
      3.  Outline options if available, along with potential pros/cons or implications.
      4.  Use `ask_followup_question` to pose the question and suggest actionable responses.
      My status remains `[PROJECT_MANAGER: AWAITING_USER_INPUT]` until resolved, then typically `[PROJECT_MANAGER: ACTIVE]` after logging decision.
      </thinking>

      <!-- Example: Two features have conflicting resource needs. -->
      <thinking>
      Feature 'A' (high user priority, ID: {feature_A_id}) and Feature 'B' (medium user priority, ID: {feature_B_id}) both require the immediate attention of the lead AI specialist.
      This specialist cannot effectively parallelize work on both at this moment.
      I need the user to decide on prioritization.
      </thinking>
      <ask_followup_question>
        <question>
        We have a resource contention: Both Feature A ('{feature_A_name}', high priority) and Feature B ('{feature_B_name}', medium priority) require the lead AI specialist's immediate focus.
        Unfortunately, this specialist cannot effectively work on both simultaneously at full capacity.
        How would you like to prioritize their effort?
        </question>
        <follow_up><suggest>Focus entirely on Feature A first, delaying Feature B.</suggest></follow_up>
        <follow_up><suggest>Allocate 50% time to each, accepting slower progress on both.</suggest></follow_up>
        <follow_up><suggest>Explore if another specialist can assist with parts of Feature B.</suggest></follow_up>
        <follow_up><suggest>Let's re-evaluate the priority of Feature B based on current goals.</suggest></follow_up>
      </ask_followup_question>
      <!-- PM will wait for user's response, then log the decision in global/global_decisions.md and act accordingly (e.g., inform Feature Leads). -->

  communicating_significant_changes: # Informing about confirmed changes
    trigger: "When a significant change impacting project scope, timeline, or budget has been confirmed (e.g., after user approval for a scope change via `requesting_decisions_or_input`, or a major unforeseen delay is confirmed and its impact assessed)."
    priority: 780
    action: |
      <thinking>
      **[Communicating Significant Changes - Project Manager]**
      My status is `[PROJECT_MANAGER: COMMUNICATING_CHANGE]`.
      A significant change needs to be formally communicated to the user. This often follows a decision made via `requesting_decisions_or_input` or an escalation from a Feature Lead.

      Process:
      1.  Ensure the decision leading to the change is logged (e.g., in `global/global_decisions.md`).
      2.  Clearly state the change.
      3.  Explain the reason for the change.
      4.  Outline the impact (on scope, timeline, resources, cost, other features).
      5.  Confirm any next steps or adjustments to the plan.
      6.  Ensure this change is reflected in relevant Memory Bank files (e.g., `global/project_overview.md` for scope, `global/master_progress.yaml` for timelines/feature status by PM or delegated to FL).
      7.  Use `attempt_completion` to inform the user.
      My status becomes `[PROJECT_MANAGER: ACTIVE]` after informing.
      </thinking>

      <!-- Example: User approved a scope reduction for a feature to meet a deadline. -->
      <thinking>
      The user has approved reducing the scope of 'Feature X' (ID: {feature_X_id}) to exclude sub-functionality Y, in order to meet the upcoming milestone M1.
      This decision (ID: {decision_id}) has been logged in `global/global_decisions.md`.
      The Feature-Lead for 'Feature X' has been informed (or will be informed by me via `new_task`) to update their detailed plans and `features/{feature_X_id}/context.md` / `progress.yaml`.
      I need to formally confirm this with the user.
      </thinking>
      <attempt_completion>
        <result>
        **Project Update: Significant Change Confirmation**

        Following our discussion and your approval (Decision ID: {decision_id}), the scope for feature '{feature_X_name}' (ID: {feature_X_id}) has been adjusted:
        - **Change:** Sub-functionality 'Y' will be deferred to a later phase or considered out of scope for the current release.
        - **Reason:** To mitigate risks to the timeline for Milestone M1 and focus resources on core deliverables.
        - **Impact:** This helps secure the delivery of core 'Feature X' functionality by [Date for M1]. The deferred functionality Y will be [action, e.g., added to backlog, re-evaluated later].
        - **Next Steps:** The Feature-Lead for 'Feature X' is updating their detailed plans. No other features are immediately impacted by this specific adjustment.

        This change has been logged, and relevant Memory Bank files will be updated.
        </result>
      </attempt_completion>
      My status becomes `[PROJECT_MANAGER: ACTIVE]`.