# A generic, minimal Alembic configuration file.

[alembic]
# path to migration scripts
script_location = alembic

# template for migration file names
# file_template = %%(rev)s_%%(slug)s

# sys.path entries, comma separated
# prepend_sys_path = .

# timezone for interpreting timestamps in file names
# timezone =

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%H:%%M:%%S

# Revision control parameters
[revision]
# Set to true if you want Alembic to create revision files with UTC timestamps
# rather than local time.
# use_utc = false


# Render options
# Set to 'true' to usestrftime() for file names, 'false' to use the default.
# date_format_strftime = false

# sqlalchemy.url = driver://user:pass@host/dbname
# Example for PostgreSQL:
# sqlalchemy.url = postgresql://user:password@localhost/mydatabase
# For this project, we will use an environment variable.
# To use an environment variable, you can set it like this:
# sqlalchemy.url = %(DATABASE_URL)s
# Or, more commonly for Alembic, ensure it's loaded by env.py
# For now, we'll point to the env var directly.
# It is common to load the actual URL in env.py from os.environ
# but alembic.ini can also reference environment variables using %(ENV_VAR_NAME)s syntax.
# We will configure env.py to load it from os.environ as it's more robust.
# So, we can leave the default commented or set it to a placeholder,
# as env.py will override it.
# For clarity in this file, let's explicitly state it will be loaded from env.py.
sqlalchemy.url = driver://user:pass@host/dbname
# The actual URL will be configured in alembic/env.py by reading the DATABASE_URL environment variable.

# Other Alembic settings can be configured here as needed.
# For example, version_locations to specify where to find migration scripts
# from multiple directories if you have a modular application.
# version_locations = %(here)s/migrations/project1 %(here)s/migrations/project2

# Set to 'true' to run 'CREATE TABLE' statements in batch mode,
# which can improve performance on some backends.
# batch_mode = false

# Set to 'true' to indicate that the DDL execution environment already
# has a transaction in progress.
# transactional_ddl = false